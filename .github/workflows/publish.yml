name: Publish

on:
  push:
    branches:
      - master
      - 'release-*'

jobs:
  update-version:
    if: |
      github.event.pull_request.merged == true &&
      startsWith(github.head_ref, 'patch') ||
      startsWith(github.head_ref, 'minor') ||
      startsWith(github.head_ref, 'major') &&
      contains(github.head_ref, '-')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js and npm
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Determine version increment
        id: version
        run: |
          if [[ "$GITHUB_HEAD_REF" =~ ^(patch|minor|major)- ]]; then
            echo "::set-output name=increment::${BASH_REMATCH[1]}"
          else
            echo "::error::Invalid branch name format"
            exit 1
          fi

      - name: Update version in package.json
        working-directory: ./release/app
        run: |
          npm version ${{ steps.version.outputs.increment }}
          git push --follow-tags

      - name: Commit and push changes
        uses: EndBug/add-and-commit@v8
        with:
          author_name: GitHub Actions
          author_email: actions@github.com
          message: 'Bump version number'

  publish:
    runs-on: ${{ matrix.os }}
    needs: update-version

    strategy:
      matrix:
        os: [macos-latest]

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Install Node and NPM
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.1
          cache: npm

      - name: Install and build
        run: |
          npm install
          npm run postinstall
          npm run build

      - name: Publish releases
        env:
          # These values are used for auto updates signing
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npm exec electron-builder -- --publish always --win --mac
